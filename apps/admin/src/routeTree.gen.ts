/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardLayoutImport } from './routes/dashboard/_layout'
import { Route as DashboardProductsEditProductIdImport } from './routes/dashboard/products/edit.$productId'
import { Route as DashboardMarketsEditMarketIdImport } from './routes/dashboard/markets/edit.$marketId'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()
const DashboardIndexLazyImport = createFileRoute('/dashboard/')()
const DashboardProductsIndexLazyImport = createFileRoute(
  '/dashboard/products/',
)()
const DashboardMarketsIndexLazyImport = createFileRoute('/dashboard/markets/')()
const DashboardContactsIndexLazyImport = createFileRoute(
  '/dashboard/contacts/',
)()
const DashboardAnalyticsIndexLazyImport = createFileRoute(
  '/dashboard/analytics/',
)()
const DashboardProductsAddLazyImport = createFileRoute(
  '/dashboard/products/add',
)()
const DashboardMarketsAddLazyImport = createFileRoute(
  '/dashboard/markets/add',
)()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardLayoutRoute,
} as any).lazy(() =>
  import('./routes/dashboard/index.lazy').then((d) => d.Route),
)

const DashboardProductsIndexLazyRoute = DashboardProductsIndexLazyImport.update(
  {
    id: '/products/',
    path: '/products/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any,
).lazy(() =>
  import('./routes/dashboard/products/index.lazy').then((d) => d.Route),
)

const DashboardMarketsIndexLazyRoute = DashboardMarketsIndexLazyImport.update({
  id: '/markets/',
  path: '/markets/',
  getParentRoute: () => DashboardLayoutRoute,
} as any).lazy(() =>
  import('./routes/dashboard/markets/index.lazy').then((d) => d.Route),
)

const DashboardContactsIndexLazyRoute = DashboardContactsIndexLazyImport.update(
  {
    id: '/contacts/',
    path: '/contacts/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any,
).lazy(() =>
  import('./routes/dashboard/contacts/index.lazy').then((d) => d.Route),
)

const DashboardAnalyticsIndexLazyRoute =
  DashboardAnalyticsIndexLazyImport.update({
    id: '/analytics/',
    path: '/analytics/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/analytics/index.lazy').then((d) => d.Route),
  )

const DashboardProductsAddLazyRoute = DashboardProductsAddLazyImport.update({
  id: '/products/add',
  path: '/products/add',
  getParentRoute: () => DashboardLayoutRoute,
} as any).lazy(() =>
  import('./routes/dashboard/products/add.lazy').then((d) => d.Route),
)

const DashboardMarketsAddLazyRoute = DashboardMarketsAddLazyImport.update({
  id: '/markets/add',
  path: '/markets/add',
  getParentRoute: () => DashboardLayoutRoute,
} as any).lazy(() =>
  import('./routes/dashboard/markets/add.lazy').then((d) => d.Route),
)

const DashboardProductsEditProductIdRoute =
  DashboardProductsEditProductIdImport.update({
    id: '/products/edit/$productId',
    path: '/products/edit/$productId',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardMarketsEditMarketIdRoute =
  DashboardMarketsEditMarketIdImport.update({
    id: '/markets/edit/$marketId',
    path: '/markets/edit/$marketId',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/markets/add': {
      id: '/dashboard/markets/add'
      path: '/markets/add'
      fullPath: '/dashboard/markets/add'
      preLoaderRoute: typeof DashboardMarketsAddLazyImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/products/add': {
      id: '/dashboard/products/add'
      path: '/products/add'
      fullPath: '/dashboard/products/add'
      preLoaderRoute: typeof DashboardProductsAddLazyImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/analytics/': {
      id: '/dashboard/analytics/'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsIndexLazyImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/contacts/': {
      id: '/dashboard/contacts/'
      path: '/contacts'
      fullPath: '/dashboard/contacts'
      preLoaderRoute: typeof DashboardContactsIndexLazyImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/markets/': {
      id: '/dashboard/markets/'
      path: '/markets'
      fullPath: '/dashboard/markets'
      preLoaderRoute: typeof DashboardMarketsIndexLazyImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/products/': {
      id: '/dashboard/products/'
      path: '/products'
      fullPath: '/dashboard/products'
      preLoaderRoute: typeof DashboardProductsIndexLazyImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/markets/edit/$marketId': {
      id: '/dashboard/markets/edit/$marketId'
      path: '/markets/edit/$marketId'
      fullPath: '/dashboard/markets/edit/$marketId'
      preLoaderRoute: typeof DashboardMarketsEditMarketIdImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/products/edit/$productId': {
      id: '/dashboard/products/edit/$productId'
      path: '/products/edit/$productId'
      fullPath: '/dashboard/products/edit/$productId'
      preLoaderRoute: typeof DashboardProductsEditProductIdImport
      parentRoute: typeof DashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface DashboardLayoutRouteChildren {
  DashboardIndexLazyRoute: typeof DashboardIndexLazyRoute
  DashboardMarketsAddLazyRoute: typeof DashboardMarketsAddLazyRoute
  DashboardProductsAddLazyRoute: typeof DashboardProductsAddLazyRoute
  DashboardAnalyticsIndexLazyRoute: typeof DashboardAnalyticsIndexLazyRoute
  DashboardContactsIndexLazyRoute: typeof DashboardContactsIndexLazyRoute
  DashboardMarketsIndexLazyRoute: typeof DashboardMarketsIndexLazyRoute
  DashboardProductsIndexLazyRoute: typeof DashboardProductsIndexLazyRoute
  DashboardMarketsEditMarketIdRoute: typeof DashboardMarketsEditMarketIdRoute
  DashboardProductsEditProductIdRoute: typeof DashboardProductsEditProductIdRoute
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardIndexLazyRoute: DashboardIndexLazyRoute,
  DashboardMarketsAddLazyRoute: DashboardMarketsAddLazyRoute,
  DashboardProductsAddLazyRoute: DashboardProductsAddLazyRoute,
  DashboardAnalyticsIndexLazyRoute: DashboardAnalyticsIndexLazyRoute,
  DashboardContactsIndexLazyRoute: DashboardContactsIndexLazyRoute,
  DashboardMarketsIndexLazyRoute: DashboardMarketsIndexLazyRoute,
  DashboardProductsIndexLazyRoute: DashboardProductsIndexLazyRoute,
  DashboardMarketsEditMarketIdRoute: DashboardMarketsEditMarketIdRoute,
  DashboardProductsEditProductIdRoute: DashboardProductsEditProductIdRoute,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/dashboard/': typeof DashboardIndexLazyRoute
  '/dashboard/markets/add': typeof DashboardMarketsAddLazyRoute
  '/dashboard/products/add': typeof DashboardProductsAddLazyRoute
  '/dashboard/analytics': typeof DashboardAnalyticsIndexLazyRoute
  '/dashboard/contacts': typeof DashboardContactsIndexLazyRoute
  '/dashboard/markets': typeof DashboardMarketsIndexLazyRoute
  '/dashboard/products': typeof DashboardProductsIndexLazyRoute
  '/dashboard/markets/edit/$marketId': typeof DashboardMarketsEditMarketIdRoute
  '/dashboard/products/edit/$productId': typeof DashboardProductsEditProductIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/dashboard': typeof DashboardIndexLazyRoute
  '/dashboard/markets/add': typeof DashboardMarketsAddLazyRoute
  '/dashboard/products/add': typeof DashboardProductsAddLazyRoute
  '/dashboard/analytics': typeof DashboardAnalyticsIndexLazyRoute
  '/dashboard/contacts': typeof DashboardContactsIndexLazyRoute
  '/dashboard/markets': typeof DashboardMarketsIndexLazyRoute
  '/dashboard/products': typeof DashboardProductsIndexLazyRoute
  '/dashboard/markets/edit/$marketId': typeof DashboardMarketsEditMarketIdRoute
  '/dashboard/products/edit/$productId': typeof DashboardProductsEditProductIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/dashboard/': typeof DashboardIndexLazyRoute
  '/dashboard/markets/add': typeof DashboardMarketsAddLazyRoute
  '/dashboard/products/add': typeof DashboardProductsAddLazyRoute
  '/dashboard/analytics/': typeof DashboardAnalyticsIndexLazyRoute
  '/dashboard/contacts/': typeof DashboardContactsIndexLazyRoute
  '/dashboard/markets/': typeof DashboardMarketsIndexLazyRoute
  '/dashboard/products/': typeof DashboardProductsIndexLazyRoute
  '/dashboard/markets/edit/$marketId': typeof DashboardMarketsEditMarketIdRoute
  '/dashboard/products/edit/$productId': typeof DashboardProductsEditProductIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/dashboard/'
    | '/dashboard/markets/add'
    | '/dashboard/products/add'
    | '/dashboard/analytics'
    | '/dashboard/contacts'
    | '/dashboard/markets'
    | '/dashboard/products'
    | '/dashboard/markets/edit/$marketId'
    | '/dashboard/products/edit/$productId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/dashboard'
    | '/dashboard/markets/add'
    | '/dashboard/products/add'
    | '/dashboard/analytics'
    | '/dashboard/contacts'
    | '/dashboard/markets'
    | '/dashboard/products'
    | '/dashboard/markets/edit/$marketId'
    | '/dashboard/products/edit/$productId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/dashboard/'
    | '/dashboard/markets/add'
    | '/dashboard/products/add'
    | '/dashboard/analytics/'
    | '/dashboard/contacts/'
    | '/dashboard/markets/'
    | '/dashboard/products/'
    | '/dashboard/markets/edit/$marketId'
    | '/dashboard/products/edit/$productId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
  LoginLazyRoute: typeof LoginLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
  LoginLazyRoute: LoginLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/_layout.tsx",
      "children": [
        "/dashboard/",
        "/dashboard/markets/add",
        "/dashboard/products/add",
        "/dashboard/analytics/",
        "/dashboard/contacts/",
        "/dashboard/markets/",
        "/dashboard/products/",
        "/dashboard/markets/edit/$marketId",
        "/dashboard/products/edit/$productId"
      ]
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.lazy.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/markets/add": {
      "filePath": "dashboard/markets/add.lazy.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/products/add": {
      "filePath": "dashboard/products/add.lazy.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/analytics/": {
      "filePath": "dashboard/analytics/index.lazy.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/contacts/": {
      "filePath": "dashboard/contacts/index.lazy.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/markets/": {
      "filePath": "dashboard/markets/index.lazy.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/products/": {
      "filePath": "dashboard/products/index.lazy.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/markets/edit/$marketId": {
      "filePath": "dashboard/markets/edit.$marketId.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/products/edit/$productId": {
      "filePath": "dashboard/products/edit.$productId.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
